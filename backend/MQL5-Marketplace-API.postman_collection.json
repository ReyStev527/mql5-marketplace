{
  "info": {
    "name": "MQL5 Marketplace API",
    "description": "Complete API testing collection for MQL5 Marketplace",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "adminToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "productId",
      "value": "",
      "type": "string"
    },
    {
      "key": "orderId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testuser@example.com\",\n  \"password\": \"password123\",\n  \"telegram_id\": \"123456789\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "  const responseData = pm.response.json();",
                  "  pm.collectionVariables.set('authToken', responseData.token);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Register Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"admin123\",\n  \"role\": \"admin\",\n  \"telegram_id\": \"987654321\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "  const responseData = pm.response.json();",
                  "  pm.collectionVariables.set('adminToken', responseData.token);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testuser@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "me"]
            }
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"password123\",\n  \"newPassword\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "change-password"]
            }
          }
        }
      ]
    },
    {
      "name": "Admin",
      "item": [
        {
          "name": "Upload EA",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "name",
                  "value": "Test Expert Advisor",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "A test EA for API testing",
                  "type": "text"
                },
                {
                  "key": "price",
                  "value": "99.99",
                  "type": "text"
                },
                {
                  "key": "category",
                  "value": "scalping",
                  "type": "text"
                },
                {
                  "key": "ea_file",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/admin/upload-ea",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "upload-ea"]
            }
          }
        },
        {
          "name": "Get All Products (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/products",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "products"]
            }
          }
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/users",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users"]
            }
          }
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Test EA\",\n  \"description\": \"Updated description\",\n  \"price\": 149.99\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "products", "{{productId}}"]
            }
          }
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "products", "{{productId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "User",
      "item": [
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/user/profile",
              "host": ["{{baseUrl}}"],
              "path": ["user", "profile"]
            }
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fullName\": \"Test User\",\n  \"telegram_id\": \"123456789\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/user/profile",
              "host": ["{{baseUrl}}"],
              "path": ["user", "profile"]
            }
          }
        },
        {
          "name": "Get Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/user/orders",
              "host": ["{{baseUrl}}"],
              "path": ["user", "orders"]
            }
          }
        },
        {
          "name": "Get Licenses",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/user/licenses",
              "host": ["{{baseUrl}}"],
              "path": ["user", "licenses"]
            }
          }
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": ["{{baseUrl}}"],
              "path": ["products"]
            }
          }
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}"]
            }
          }
        },
        {
          "name": "Get Featured Products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/featured",
              "host": ["{{baseUrl}}"],
              "path": ["products", "featured"]
            }
          }
        },
        {
          "name": "Search Products",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/search?q=scalping&category=trading&minPrice=0&maxPrice=1000",
              "host": ["{{baseUrl}}"],
              "path": ["products", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "scalping"
                },
                {
                  "key": "category",
                  "value": "trading"
                },
                {
                  "key": "minPrice",
                  "value": "0"
                },
                {
                  "key": "maxPrice",
                  "value": "1000"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Payments",
      "item": [
        {
          "name": "Create Transaction",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": \"{{productId}}\",\n  \"amount\": 99.99,\n  \"currency\": \"USD\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/payments/create-transaction",
              "host": ["{{baseUrl}}"],
              "path": ["payments", "create-transaction"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "  const responseData = pm.response.json();",
                  "  pm.collectionVariables.set('orderId', responseData.orderId);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Payment Notification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"order_id\": \"{{orderId}}\",\n  \"transaction_status\": \"settlement\",\n  \"gross_amount\": \"99.99\",\n  \"payment_type\": \"credit_card\",\n  \"transaction_time\": \"2024-01-01 12:00:00\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/payments/notification",
              "host": ["{{baseUrl}}"],
              "path": ["payments", "notification"]
            }
          }
        },
        {
          "name": "Check Payment Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/payments/status/{{orderId}}",
              "host": ["{{baseUrl}}"],
              "path": ["payments", "status", "{{orderId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Telegram",
      "item": [
        {
          "name": "Send Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"chatId\": \"123456789\",\n  \"message\": \"Test message from Postman API testing\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/telegram/send-message",
              "host": ["{{baseUrl}}"],
              "path": ["telegram", "send-message"]
            }
          }
        },
        {
          "name": "Send File",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"chatId\": \"123456789\",\n  \"filePath\": \"/path/to/test/file.mq5\",\n  \"caption\": \"Test EA file from API\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/telegram/send-file",
              "host": ["{{baseUrl}}"],
              "path": ["telegram", "send-file"]
            }
          }
        },
        {
          "name": "Webhook Status",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/telegram/webhook",
              "host": ["{{baseUrl}}"],
              "path": ["telegram", "webhook"]
            }
          }
        }
      ]
    }
  ]
}
