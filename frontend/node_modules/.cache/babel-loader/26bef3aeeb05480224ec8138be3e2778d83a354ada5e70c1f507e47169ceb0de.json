{"ast":null,"code":"// frontend/src/components/auth/Login.js\nimport React,{useState}from'react';import{Dialog,DialogTitle,DialogContent,DialogActions,TextField,Button,Box,Typography,Alert,FormControlLabel,Checkbox,Divider,IconButton,InputAdornment}from'@mui/material';import{Visibility,VisibilityOff,Person,Lock,AdminPanelSettings}from'@mui/icons-material';import{authAPI,setAuthToken}from'../../services/api';import{mockAuthAPI,checkBackendConnection}from'../../services/mockAuth';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=_ref=>{let{open,onClose,onLoginSuccess}=_ref;const[formData,setFormData]=useState({email:'',password:'',rememberMe:false});const[showPassword,setShowPassword]=useState(false);const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[isAdminLogin,setIsAdminLogin]=useState(false);const handleInputChange=e=>{const{name,value,checked}=e.target;setFormData(prev=>({...prev,[name]:e.target.type==='checkbox'?checked:value}));};const handleSubmit=async e=>{e.preventDefault();setLoading(true);setError('');try{console.log('Attempting login to:','http://localhost:3000/api/auth/login');console.log('With credentials:',{email:formData.email,password:'***'});// Check if backend is available\nconst backendAvailable=await checkBackendConnection();let response;if(backendAvailable){console.log('Using real backend API');response=await authAPI.login({email:formData.email,password:formData.password});}else{console.log('Backend not available, using mock data');response=await mockAuthAPI.login({email:formData.email,password:formData.password});}console.log('Login response:',response);if(response.data.success){const{token,user}=response.data;// Store token\nsetAuthToken(token);// Store user info\nlocalStorage.setItem('user',JSON.stringify(user));// Remember me functionality\nif(formData.rememberMe){localStorage.setItem('rememberMe','true');}// Call success callback\nif(onLoginSuccess){onLoginSuccess(user);}// Close dialog\nonClose();// Reset form\nsetFormData({email:'',password:'',rememberMe:false});}}catch(error){console.error('Login error details:',error);if(error.message==='Invalid credentials'){setError('Invalid email or password. Please check your credentials.');}else if(error.code==='ERR_NETWORK'){setError('Cannot connect to server. Using demo mode with mock data.');// Try mock login as fallback\ntry{const mockResponse=await mockAuthAPI.login({email:formData.email,password:formData.password});if(mockResponse.data.success){const{token,user}=mockResponse.data;setAuthToken(token);localStorage.setItem('user',JSON.stringify(user));if(onLoginSuccess)onLoginSuccess(user);onClose();setFormData({email:'',password:'',rememberMe:false});return;}}catch(mockError){setError('Invalid credentials for demo mode.');}}else if(error.response){var _error$response,_error$response$data;setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Login failed. Please check your credentials.');}else{setError('Network error. Please check if the backend server is running.');}}finally{setLoading(false);}};const handleAdminQuickLogin=()=>{setFormData({email:'admin@mql5marketplace.com',password:'admin123',rememberMe:false});setIsAdminLogin(true);};const handleUserQuickLogin=()=>{setFormData({email:'user@example.com',password:'user123',rememberMe:false});setIsAdminLogin(false);};return/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:onClose,maxWidth:\"sm\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:1},children:[/*#__PURE__*/_jsx(Person,{}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Login to MQL5 Marketplace\"})]})}),/*#__PURE__*/_jsxs(DialogContent,{children:[error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:2},children:error}),/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",gutterBottom:true,children:\"Quick Login (Demo):\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:1,flexWrap:'wrap'},children:[/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(AdminPanelSettings,{}),onClick:handleAdminQuickLogin,sx:{textTransform:'none'},children:\"Admin Login\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(Person,{}),onClick:handleUserQuickLogin,sx:{textTransform:'none'},children:\"User Login\"})]}),/*#__PURE__*/_jsx(Divider,{sx:{my:2}})]}),/*#__PURE__*/_jsxs(Box,{component:\"form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,name:\"email\",label:\"Email\",type:\"email\",value:formData.email,onChange:handleInputChange,required:true,autoComplete:\"email\",sx:{mb:2},InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(Person,{})})}}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,name:\"password\",label:\"Password\",type:showPassword?'text':'password',value:formData.password,onChange:handleInputChange,required:true,autoComplete:\"current-password\",sx:{mb:2},InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(Lock,{})}),endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>setShowPassword(!showPassword),edge:\"end\",children:showPassword?/*#__PURE__*/_jsx(VisibilityOff,{}):/*#__PURE__*/_jsx(Visibility,{})})})}}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{name:\"rememberMe\",checked:formData.rememberMe,onChange:handleInputChange}),label:\"Remember me\",sx:{mb:2}})]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:2,p:2,bgcolor:'grey.50',borderRadius:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"primary\",gutterBottom:true,children:\"Demo Credentials:\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Admin:\"}),\" admin@mql5marketplace.com / admin123\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"User:\"}),\" user@example.com / user123\"]})]}),/*#__PURE__*/_jsx(Box,{sx:{mt:1,p:1,bgcolor:'info.main',color:'white',borderRadius:1,fontSize:'0.8rem'},children:/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",children:[\"\\uD83D\\uDD27 Demo Mode: Works without backend server\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uD83D\\uDE80 Full Mode: Start backend on port 3000 for complete functionality\"]})})]}),/*#__PURE__*/_jsxs(DialogActions,{sx:{px:3,pb:3},children:[/*#__PURE__*/_jsx(Button,{onClick:onClose,disabled:loading,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSubmit,variant:\"contained\",disabled:loading||!formData.email||!formData.password,sx:{px:4},children:loading?'Signing In...':'Sign In'})]})]});};export default Login;","map":{"version":3,"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Button","Box","Typography","Alert","FormControlLabel","Checkbox","Divider","IconButton","InputAdornment","Visibility","VisibilityOff","Person","Lock","AdminPanelSettings","authAPI","setAuthToken","mockAuthAPI","checkBackendConnection","jsx","_jsx","jsxs","_jsxs","Login","_ref","open","onClose","onLoginSuccess","formData","setFormData","email","password","rememberMe","showPassword","setShowPassword","loading","setLoading","error","setError","isAdminLogin","setIsAdminLogin","handleInputChange","e","name","value","checked","target","prev","type","handleSubmit","preventDefault","console","log","backendAvailable","response","login","data","success","token","user","localStorage","setItem","JSON","stringify","message","code","mockResponse","mockError","_error$response","_error$response$data","handleAdminQuickLogin","handleUserQuickLogin","maxWidth","fullWidth","children","sx","display","alignItems","gap","variant","severity","mb","color","gutterBottom","flexWrap","size","startIcon","onClick","textTransform","my","component","onSubmit","label","onChange","required","autoComplete","InputProps","startAdornment","position","endAdornment","edge","control","mt","p","bgcolor","borderRadius","fontSize","px","pb","disabled"],"sources":["/workspaces/mql5-marketplace/frontend/src/components/auth/Login.js"],"sourcesContent":["// frontend/src/components/auth/Login.js\nimport React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Button,\n  Box,\n  Typography,\n  Alert,\n  FormControlLabel,\n  Checkbox,\n  Divider,\n  IconButton,\n  InputAdornment,\n} from '@mui/material';\nimport {\n  Visibility,\n  VisibilityOff,\n  Person,\n  Lock,\n  AdminPanelSettings,\n} from '@mui/icons-material';\nimport { authAPI, setAuthToken } from '../../services/api';\nimport { mockAuthAPI, checkBackendConnection } from '../../services/mockAuth';\n\nconst Login = ({ open, onClose, onLoginSuccess }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    rememberMe: false\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [isAdminLogin, setIsAdminLogin] = useState(false);\n\n  const handleInputChange = (e) => {\n    const { name, value, checked } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: e.target.type === 'checkbox' ? checked : value\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    try {\n      console.log('Attempting login to:', 'http://localhost:3000/api/auth/login');\n      console.log('With credentials:', { email: formData.email, password: '***' });\n      \n      // Check if backend is available\n      const backendAvailable = await checkBackendConnection();\n      let response;\n      \n      if (backendAvailable) {\n        console.log('Using real backend API');\n        response = await authAPI.login({\n          email: formData.email,\n          password: formData.password\n        });\n      } else {\n        console.log('Backend not available, using mock data');\n        response = await mockAuthAPI.login({\n          email: formData.email,\n          password: formData.password\n        });\n      }\n\n      console.log('Login response:', response);\n\n      if (response.data.success) {\n        const { token, user } = response.data;\n        \n        // Store token\n        setAuthToken(token);\n        \n        // Store user info\n        localStorage.setItem('user', JSON.stringify(user));\n        \n        // Remember me functionality\n        if (formData.rememberMe) {\n          localStorage.setItem('rememberMe', 'true');\n        }\n\n        // Call success callback\n        if (onLoginSuccess) {\n          onLoginSuccess(user);\n        }\n\n        // Close dialog\n        onClose();\n\n        // Reset form\n        setFormData({\n          email: '',\n          password: '',\n          rememberMe: false\n        });\n      }\n    } catch (error) {\n      console.error('Login error details:', error);\n      \n      if (error.message === 'Invalid credentials') {\n        setError('Invalid email or password. Please check your credentials.');\n      } else if (error.code === 'ERR_NETWORK') {\n        setError('Cannot connect to server. Using demo mode with mock data.');\n        // Try mock login as fallback\n        try {\n          const mockResponse = await mockAuthAPI.login({\n            email: formData.email,\n            password: formData.password\n          });\n          \n          if (mockResponse.data.success) {\n            const { token, user } = mockResponse.data;\n            setAuthToken(token);\n            localStorage.setItem('user', JSON.stringify(user));\n            if (onLoginSuccess) onLoginSuccess(user);\n            onClose();\n            setFormData({ email: '', password: '', rememberMe: false });\n            return;\n          }\n        } catch (mockError) {\n          setError('Invalid credentials for demo mode.');\n        }\n      } else if (error.response) {\n        setError(error.response?.data?.message || 'Login failed. Please check your credentials.');\n      } else {\n        setError('Network error. Please check if the backend server is running.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAdminQuickLogin = () => {\n    setFormData({\n      email: 'admin@mql5marketplace.com',\n      password: 'admin123',\n      rememberMe: false\n    });\n    setIsAdminLogin(true);\n  };\n\n  const handleUserQuickLogin = () => {\n    setFormData({\n      email: 'user@example.com',\n      password: 'user123',\n      rememberMe: false\n    });\n    setIsAdminLogin(false);\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n      <DialogTitle>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          <Person />\n          <Typography variant=\"h6\">\n            Login to MQL5 Marketplace\n          </Typography>\n        </Box>\n      </DialogTitle>\n\n      <DialogContent>\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n\n        {/* Quick Login Buttons for Demo */}\n        <Box sx={{ mb: 3 }}>\n          <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n            Quick Login (Demo):\n          </Typography>\n          <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              startIcon={<AdminPanelSettings />}\n              onClick={handleAdminQuickLogin}\n              sx={{ textTransform: 'none' }}\n            >\n              Admin Login\n            </Button>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              startIcon={<Person />}\n              onClick={handleUserQuickLogin}\n              sx={{ textTransform: 'none' }}\n            >\n              User Login\n            </Button>\n          </Box>\n          <Divider sx={{ my: 2 }} />\n        </Box>\n\n        <Box component=\"form\" onSubmit={handleSubmit}>\n          <TextField\n            fullWidth\n            name=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            value={formData.email}\n            onChange={handleInputChange}\n            required\n            autoComplete=\"email\"\n            sx={{ mb: 2 }}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Person />\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          <TextField\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type={showPassword ? 'text' : 'password'}\n            value={formData.password}\n            onChange={handleInputChange}\n            required\n            autoComplete=\"current-password\"\n            sx={{ mb: 2 }}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Lock />\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={() => setShowPassword(!showPassword)}\n                    edge=\"end\"\n                  >\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          <FormControlLabel\n            control={\n              <Checkbox\n                name=\"rememberMe\"\n                checked={formData.rememberMe}\n                onChange={handleInputChange}\n              />\n            }\n            label=\"Remember me\"\n            sx={{ mb: 2 }}\n          />\n        </Box>\n\n        {/* Demo Credentials Info */}\n        <Box sx={{ mt: 2, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\n          <Typography variant=\"subtitle2\" color=\"primary\" gutterBottom>\n            Demo Credentials:\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            <strong>Admin:</strong> admin@mql5marketplace.com / admin123<br />\n            <strong>User:</strong> user@example.com / user123\n          </Typography>\n        </Box>\n\n        {/* Debug Info */}\n        <Box sx={{ mt: 1, p: 1, bgcolor: 'info.main', color: 'white', borderRadius: 1, fontSize: '0.8rem' }}>\n          <Typography variant=\"caption\">\n            🔧 Demo Mode: Works without backend server<br />\n            🚀 Full Mode: Start backend on port 3000 for complete functionality\n          </Typography>\n        </Box>\n      </DialogContent>\n\n      <DialogActions sx={{ px: 3, pb: 3 }}>\n        <Button onClick={onClose} disabled={loading}>\n          Cancel\n        </Button>\n        <Button\n          onClick={handleSubmit}\n          variant=\"contained\"\n          disabled={loading || !formData.email || !formData.password}\n          sx={{ px: 4 }}\n        >\n          {loading ? 'Signing In...' : 'Sign In'}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default Login;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}